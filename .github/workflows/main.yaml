---
name: test nornir
on: [push,pull_request]

jobs:
  linters:
    name: linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2
        with:
          version: 1.0.10

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-linters-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-linters-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Run pylama
        run: make pylama
      - name: Run black
        run: make black
      - name: Run mypy
        run: make mypy
      - name: Run sphinx
        run: |
          sudo apt-get install pandoc
          make sphinx

  pytest:
    name: Testing on Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8' ]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2
        with:
          version: 1.0.10

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Run pytest
        run: make pytest

      - name: Run nbval
        run: make nbval
        if: ${{ matrix.platform != 'windows-latest' }}

  release:
    name: Releasing to pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build
        uses: abatilo/actions-poetry@v1.5.0
        with:
          python_version: 3.8.0
          poetry_version: 1.0
          working_directory: .
          args: build
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
